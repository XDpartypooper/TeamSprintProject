/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import User.UserAccount;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import ControllerClass.*;
import User.UserProfile;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author XDpartypooper
 */
public class ProfileTypeView extends javax.swing.JFrame {
    static String ID;
    static String name;
    /**
     * Creates new form AccountManagement
     */
    public ProfileTypeView(String name,String ID) throws SQLException {  
        this.name =name;
        this.ID =ID;
        initComponents();
        setLocationRelativeTo(null);
        refreshtable();   
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton4.setText("Main Menu");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proftile Type", "ProfileType ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Create new Profile Type");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update Profile Type");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Profile Type");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //Back to main menu
        new SystemAdminMenu(name,ID).setVisible(true);
        ClosePanel();//close menu
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //create
        
        JFrame  f=new JFrame();
            SystemAdminController SAC= new SystemAdminController();
            
            
            JTextField PTField = new JTextField(20);


            JPanel myPanel = new JPanel();
            myPanel.add(new JLabel("Profile Type:"));
            myPanel.add(PTField);

            JOptionPane.showConfirmDialog(null, myPanel,"Please Enter Name of new Profile Type ", JOptionPane.OK_CANCEL_OPTION);
            String ProfileType = PTField.getText();//get name of profile u entered
            
            if(ProfileType.isEmpty())
            {
                //error message pop up if empty
                JFrame E=new JFrame();
                JOptionPane.showMessageDialog(E,"Nothing Entered","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
            try {              
                SAC.NewProTypeCon(ProfileType);
                refreshtable();
            } catch (SQLException ex) {
                Logger.getLogger(ProfileTypeView.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            
    }//GEN-LAST:event_jButton1ActionPerformed

   
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            //update
            JFrame  f=new JFrame();
            SystemAdminController SAC= new SystemAdminController();
            String ProfileType_ID = JOptionPane.showInputDialog(f,"Enter the User ID you want to update");

            boolean CHECK=false;//check if ID exsist
            CHECK = SAC.PTIDExsistCon(ProfileType_ID);
            System.out.print(CHECK);
            if (CHECK==false)
            {
                JFrame e=new JFrame();
                JOptionPane.showMessageDialog(null,"No Such profile type","ERROR",JOptionPane.ERROR_MESSAGE);
                throw new SQLException();
            }
            
            switch (ProfileType_ID)
            {
                case "1":
                case "2":
                case "3":
                case "4":
                JFrame e=new JFrame();
                CHECK=false;
                JOptionPane.showMessageDialog(null,"Unable to update Default User Profiles","ERROR",JOptionPane.ERROR_MESSAGE);
                //cannot update defaults 
                 throw new SQLException();
            }
            
            if (CHECK==true)
            {
                JTextField PTfield = new JTextField(20);

                JPanel myPanel = new JPanel();
                myPanel.add(new JLabel("Profile Type:"));
                myPanel.add(PTfield);
    
             

                JOptionPane.showConfirmDialog(null, myPanel,"Please Enter data of updated user profile " , JOptionPane.OK_CANCEL_OPTION);

                String ProfileType  = PTfield.getText();//get username 
            

                if((ProfileType.isEmpty()) )
                {
                    //error message pop up if empty
                    JOptionPane.showMessageDialog(null,"Invalid, No values Entered","ERROR",JOptionPane.ERROR_MESSAGE);
                } 
                else// if() check
                {
                    //update
                    SAC.UpdatePTCon(ProfileType,ProfileType_ID); 
                    refreshtable();
                }       
            }       
        } catch (SQLException ex) {
            Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //delete
        try {
            // TODO add your handling code here:
            //delete
            JFrame  f=new JFrame();
            SystemAdminController SAC= new SystemAdminController();
            String ProfileType_ID = JOptionPane.showInputDialog(f,"Enter the Profile Type ID you want to delete");
            
 
            boolean CHECK=false;//check if ID exsist
            CHECK = SAC.PTIDExsistCon(ProfileType_ID);
            System.out.print(CHECK);
            if (CHECK==false)
            {
                JFrame e=new JFrame();
                JOptionPane.showMessageDialog(null,"No Such Profile Type","ERROR",JOptionPane.ERROR_MESSAGE);
                throw new SQLException();
            }
            
            switch (ProfileType_ID)
            {
                case "1":
                case "2":
                case "3":
                case "4":
                JFrame e=new JFrame();
                CHECK=false;
                JOptionPane.showMessageDialog(null,"Unable to Delete Default User Profiles","ERROR",JOptionPane.ERROR_MESSAGE);
                //cannot update defaults 
                 throw new SQLException();
            }
                       
            if (CHECK==true)
            {   

               JFrame c=new JFrame();
               int a=JOptionPane.showConfirmDialog(c,"Are you sure you want to delete Profile User:");

               if(a==JOptionPane.YES_OPTION)
                {
                    
                   
                    //final delete
                    SAC.DeletePTCon(ProfileType_ID);//delete USER
                    JOptionPane.showMessageDialog(null,"Profile User will be deleted!","Profile Type Deleted",JOptionPane.ERROR_MESSAGE);               
                    refreshtable();
                }  
            }       
        } catch (SQLException ex) {
            Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
       // DeletePT(String ProfileType_ID)
    }//GEN-LAST:event_jButton3ActionPerformed
    public void ClosePanel()
    {
        setVisible(false);
        dispose();
    }
    
     public void refreshtable()
    {
        try {
            // TODO add your handling code here:
            //refresh Tables
            DefaultTableModel tbm1= (DefaultTableModel)jTable1.getModel();
            tbm1.setRowCount(0);
            SystemAdminController SAC= new SystemAdminController();

            ArrayList<UserProfile> al = SAC.GetProfileTypeCon();//get the profile tables          
            for (int i=0; i< al.size();i++)
            {        
                tbm1.addRow(al.get(i).ReturnProfileTypeArray());
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileTypeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileTypeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileTypeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileTypeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ProfileTypeView(name,ID).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ProfileTypeView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
